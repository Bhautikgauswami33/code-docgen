import React from 'react';
import ReactMarkdown from 'react-markdown';
import CodeHighlighter from './CodeHighlighter';
import './DocViewer.css';

const DocViewer = ({ documentation, generator }) => {
  if (!documentation) {
    return (
      <div className="doc-empty">
        <p>Upload a code file to see documentation here</p>
      </div>
    );
  }

  // Custom renderers for markdown with syntax highlighting
  const components = {
    code({node, inline, className, children, ...props}) {
      const match = /language-(\w+)/.exec(className || '');
      return !inline && match ? (
        <CodeHighlighter 
          language={match[1]} 
          {...props}
        >
          {String(children).replace(/\n$/, '')}
        </CodeHighlighter>
      ) : (
        <code className={className} {...props}>
          {children}
        </code>
      );
    }
  };

  return (
    <div className="doc-viewer">
      <div className="doc-header">
        <h3>Generated Documentation</h3>
        {generator && (
          <div className={`doc-generator-badge ${generator}`} title={`Documentation generated by ${generator}`}>
            {generator === 'deepseek' ? 'ü§ñ AI Generated' : generator === 'ast' ? 'üß© AST Parser' : '‚ö†Ô∏è Error'}
          </div>
        )}
      </div>
      <div className="markdown-content">
        <ReactMarkdown components={components}>{documentation}</ReactMarkdown>
      </div>
    </div>
  );
};

export default DocViewer;